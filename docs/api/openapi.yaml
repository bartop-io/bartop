openapi: 3.0.0
info:
  title: BarTop API
  description: API for interacting with BarTop data
  version: 0.0.1
  contact:
    name: 'BarTop Dev Team'
    url: https://github.com/dpopp07/bartop/issues
  license:
    name: 'MIT'

servers:
  - url: http://localhost:3001
    description: Local development server

security:
  - Auth0: []

paths:
  /drinks:
    get:
      operationId: listDrinks
      summary: Get a list of all drinks.
      description: Returns an object containing an array of all drinks.
      responses:
        '200':
          description: Returned list of all the drinks.
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items: $ref: '#/components/schemas/Drink'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/GeneralError'

  /users:
    post:
      summary:
      description:
      operationId: createUser
      requestBody:
        required: true
        description: JSON object containing the new User to be created.
        content:
          application/json:
            schema:
              # *** do we need to define a specific schema for input objects (objects without the id?)
      responses:
        '201':
          description: New User successfully created.
          content:
            # *** TODO - should be the new user object along with their new ID
        '401':
          $ref: '#/components/responses/Unauthorized'
        '406':
          $ref: '#/components/responses/InvalidContentType'
        '422':
          $ref: '#/components/responses/InvalidBodyModel'
        '500':
          $ref: '#/components/responses/GeneralError'
    get:
      operationId: listUsers
      summary: Get a list of all users.
      description: Returns an object containing an array of all users.
      responses:
        '200':
          description: Returned list of all the users.
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items: $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/GeneralError'

components:

  securitySchemes:
    Auth0:
      type: http
      scheme: bearer
      bearerFormat: JWT

  responses:
    # error responses
    GeneralError:
      description: Internal server error.

    Unauthorized:
      description: Access token is missing or invalid.

    NonExistant:
      description: Route does not exist.

    InvalidContentType:
      description: Invalid content type.

    InvalidBodyModel:
      description: Invalid model in body.

  schemas:
# ***
# CHANGE THE DRINK OBJECT TO MATCH THE NEW MODEL!
    Drink:
      type: object
      required:
        - id
        - name
        - ingredients
      properties:
        id:
          type: string
        name:
          type: string
        ingredients:
          type: array
          items:
            type: object
            properties:
              ingredientId:
                type: string
              amount:
                type: object
                properties:
                  quantity:
                    type: double
                  unit:
                    type: string
        instructions:
          type: array
          items:
            type: string
        description:
          type: string
        picture:
          type: string
          format: uri

    User:
      type: object
      properties:
        id:
          type: string
          description: The database generated ID. This is not applicable for requests but will always be present in responses.
        authoId:
          type: string
          description: The user ID generated by Auth0, used to distinguish users at login. It is required for posting new users to the database.